{
    "swagger": "2.0",
    "info": {
        "description": "Advanced file upload and ML processing API for image and video blurring",
        "title": "Obscura API",
        "contact": {
            "name": "API Support",
            "email": "yagadanaga@ya.ru"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api",
    "paths": {
        "/": {
            "get": {
                "description": "Get basic API information and version",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "API information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/stats": {
            "get": {
                "description": "Get administrative statistics about server, file system, ML service and rate limiter",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Admin statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal.SuccessResponse"
                        }
                    }
                }
            }
        },
        "/api/files": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get list of all files uploaded by the authenticated user with their processing status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Get user files",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/internal.File"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/files/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Handle file operations: GET for file info/download, DELETE for removal. Use ?type=original or ?type=processed query parameter for downloads",
                "tags": [
                    "files"
                ],
                "summary": "File operations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "original",
                            "processed"
                        ],
                        "type": "string",
                        "description": "Download type",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File deleted",
                        "schema": {
                            "$ref": "#/definitions/internal.SuccessResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Handle file operations: GET for file info/download, DELETE for removal. Use ?type=original or ?type=processed query parameter for downloads",
                "tags": [
                    "files"
                ],
                "summary": "File operations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "original",
                            "processed"
                        ],
                        "type": "string",
                        "description": "Download type",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File deleted",
                        "schema": {
                            "$ref": "#/definitions/internal.SuccessResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "description": "Authenticate user with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "User login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal.AuthResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "description": "Create a new user account with email, password and name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register new user",
                "parameters": [
                    {
                        "description": "User registration data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/upload": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Upload a file (images and videos) and automatically send it for ML processing. Available for both authenticated and anonymous users with rate limiting",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Upload and process file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "enum": [
                            "gaussian",
                            "motion",
                            "pixelate"
                        ],
                        "type": "string",
                        "default": "gaussian",
                        "description": "Type of blur to apply",
                        "name": "blur_type",
                        "in": "formData"
                    },
                    {
                        "maximum": 10,
                        "minimum": 1,
                        "type": "integer",
                        "default": 5,
                        "description": "Effect intensity (1-10)",
                        "name": "intensity",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "\"face,person,car\"",
                        "description": "Comma-separated list of objects to blur",
                        "name": "object_types",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File uploaded and processing started",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/internal.File"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get current user profile information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/internal.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/profile/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update user profile information (name, email, password)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update user profile",
                "parameters": [
                    {
                        "description": "Profile update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal.UpdateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/internal.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/stats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed statistics about user's files, uploads and processing status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/internal.UserStats"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check system health including database connection, ML service and file system stats",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal.AuthResponse": {
            "description": "Authentication response with JWT token",
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "user": {
                    "$ref": "#/definitions/internal.User"
                }
            }
        },
        "internal.ErrorResponse": {
            "description": "Error response",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid credentials"
                }
            }
        },
        "internal.File": {
            "description": "Uploaded file information with processing status",
            "type": "object",
            "properties": {
                "error_message": {
                    "type": "string",
                    "example": "Processing failed: invalid format"
                },
                "file_name": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000.jpg"
                },
                "file_size": {
                    "type": "integer",
                    "example": 1048576
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "mime_type": {
                    "type": "string",
                    "example": "image/jpeg"
                },
                "original_name": {
                    "type": "string",
                    "example": "photo.jpg"
                },
                "processed_at": {
                    "type": "string",
                    "example": "2024-01-15T09:05:00Z"
                },
                "processed_name": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000_processed.jpg"
                },
                "processed_size": {
                    "type": "integer",
                    "example": 1048576
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "uploaded",
                        "processing",
                        "completed",
                        "failed"
                    ],
                    "example": "uploaded"
                },
                "uploaded_at": {
                    "type": "string",
                    "example": "2024-01-15T09:00:00Z"
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "internal.LoginRequest": {
            "description": "User login request",
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "securePassword123"
                }
            }
        },
        "internal.RegisterRequest": {
            "description": "User registration request",
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2,
                    "example": "John Doe"
                },
                "password": {
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 6,
                    "example": "securePassword123"
                }
            }
        },
        "internal.SuccessResponse": {
            "description": "Success response with optional data",
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Operation completed successfully"
                }
            }
        },
        "internal.UpdateProfileRequest": {
            "description": "Profile update request (all fields are optional)",
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "newemail@example.com"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2,
                    "example": "Jane Doe"
                },
                "password": {
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 6,
                    "example": "newSecurePassword456"
                }
            }
        },
        "internal.User": {
            "description": "User account information",
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2024-01-15T09:00:00Z"
                },
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-01-15T09:00:00Z"
                }
            }
        },
        "internal.UserStats": {
            "description": "User statistics and usage information",
            "type": "object",
            "properties": {
                "failed_files": {
                    "type": "integer",
                    "example": 3
                },
                "files_by_status": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    },
                    "example": {
                        "completed": 20,
                        "failed": 1,
                        "processing": 2,
                        "uploaded": 2
                    }
                },
                "files_by_type": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    },
                    "example": {
                        "image": 15,
                        "video": 10
                    }
                },
                "processed_files": {
                    "type": "integer",
                    "example": 20
                },
                "processed_this_month": {
                    "type": "integer",
                    "example": 12
                },
                "processed_this_week": {
                    "type": "integer",
                    "example": 7
                },
                "processed_today": {
                    "type": "integer",
                    "example": 2
                },
                "processing_files": {
                    "type": "integer",
                    "example": 2
                },
                "recent_files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal.File"
                    }
                },
                "total_files": {
                    "type": "integer",
                    "example": 25
                },
                "total_size": {
                    "type": "integer",
                    "example": 52428800
                },
                "total_size_mb": {
                    "type": "number",
                    "example": 50
                },
                "uploaded_this_month": {
                    "type": "integer",
                    "example": 15
                },
                "uploaded_this_week": {
                    "type": "integer",
                    "example": 8
                },
                "uploaded_today": {
                    "type": "integer",
                    "example": 3
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}