version: '3.8'

services:
  backend-app:
    build: 
      context: ./backend/backend-app
      dockerfile: Dockerfile
    environment:
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=appdb
      - DB_PORT=5432
      - UPLOAD_PATH=/app/uploads
      - JWT_SECRET=docker-jwt-secret-change-in-production
    volumes:
      - uploads:/app/uploads
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    build: 
      context: .
      dockerfile: Dockerfile.frontend
    networks:
      - app-network

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend-app
      - frontend
    networks:
      - app-network

  db:
    image: postgres:17-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=appdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d appdb"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network

volumes:
  uploads:
  postgres_data:

networks:
  app-network:
    driver: bridge